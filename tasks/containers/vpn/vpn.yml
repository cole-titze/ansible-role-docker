---
- name: Setup DuckDns
  ansible.builtin.import_tasks: duckdns.yml

- name: Ensure WireGuard and PiVPN directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - /home/{{ ansible_user }}/wireguard-backup

# 1. Transfer Backup Files
- name: Transfer WireGuard backup
  ansible.builtin.copy:
    src: "{{ ansible_files_path }}/backups/vpn/wireguard-backup.tar.gz"
    dest: /home/{{ ansible_user }}/wireguard-backup/wireguard-backup.tar.gz
    mode: '0644'

- name: Check if /etc/wireguard exists
  ansible.builtin.stat:
    path: /etc/wireguard
  register: wireguard_dir

- name: Extract the backup archive if /etc/wireguard is missing
  ansible.builtin.unarchive:
    src: /home/{{ ansible_user }}/wireguard-backup/wireguard-backup.tar.gz  # Change path if needed
    dest: /etc
    remote_src: true
  when: not wireguard_dir.stat.exists

- name: Deploy WireGuard container
  docker_container:
    name: wireguard
    image: lscr.io/linuxserver/wireguard:latest
    state: started
    restart_policy: unless-stopped
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    env:
      PUID: "1000"
      PGID: "1000"
      TZ: "America/Chicago"
      SERVERPORT: "51820"
    published_ports:
      - "51820:51820/udp"
    volumes:
      - "/etc/wireguard:/config"
      - "/lib/modules:/lib/modules"
    sysctls:
      "net.ipv4.conf.all.src_valid_mark": "1"