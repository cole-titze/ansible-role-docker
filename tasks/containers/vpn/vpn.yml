---
- name: Setup DuckDns
  ansible.builtin.import_tasks: duckdns.yml

- name: Ensure WireGuard and PiVPN directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - /home/{{ ansible_user }}/wireguard-backup

# 1. Transfer Backup Files
- name: Transfer WireGuard backup
  ansible.builtin.copy:
    src: "{{ ansible_files_path }}/backups/vpn/pivpn.tgz"
    dest: /home/{{ ansible_user }}/wireguard-backup/wireguard-backup.tar.gz
    mode: '0644'

- name: Check if /etc/wireguard exists
  ansible.builtin.stat:
    path: /etc/wireguard
  register: wireguard_dir

- name: Extract the backup archive if /etc/wireguard is missing
  ansible.builtin.unarchive:
    src: /home/{{ ansible_user }}/wireguard_backup.tar.gz  # Change path if needed
    dest: /
    remote_src: true
  when: not wireguard_dir.stat.exists

# 4. Pull and Run Docker Container
# - name: Pull WireGuard PiVPN Docker image
#   community.docker.docker_image:
#     name: ghcr.io/pivpn/pivpn
#     tag: latest
#     source: pull

# - name: Run WireGuard PiVPN Docker container
#   community.docker.docker_container:
#     name: pivpn-wireguard
#     image: ghcr.io/pivpn/pivpn:latest
#     restart_policy: unless-stopped
#     network_mode: host
#     volumes:
#       - /etc/wireguard:/etc/wireguard
#       - /etc/pivpn:/etc/pivpn
#     capabilities:
#       - NET_ADMIN
#       - SYS_MODULE
#     env:
#       VPN: wireguard