---
- name: Setup DuckDns
  ansible.builtin.import_tasks: duckdns.yml

# 1. Transfer Backup Files
- name: Transfer WireGuard backup
  ansible.builtin.copy:
    src: "{{ ansible_files_path }}/vpn/wireguard-backup.tar.gz"
    dest: /tmp/wireguard-backup.tar.gz
    mode: '0644'

- name: Transfer PiVPN backup
  ansible.builtin.copy:
    src: "{{ ansible_files_path }}/vpn/pivpn-backup.tar.gz"
    dest: /tmp/pivpn-backup.tar.gz
    mode: '0644'

# 2. Extract Backups
- name: Extract WireGuard backup
  ansible.builtin.unarchive:
    src: /tmp/wireguard-backup.tar.gz
    dest: /etc/wireguard
    remote_src: true
    extra_opts: [--no-overwrite-dir]

- name: Extract PiVPN backup
  ansible.builtin.unarchive:
    src: /tmp/pivpn-backup.tar.gz
    dest: /etc/pivpn
    remote_src: true
    extra_opts: [--no-overwrite-dir]

# 3. Set Permissions
- name: Set permissions for WireGuard files
  ansible.builtin.file:
    path: /etc/wireguard
    state: directory
    owner: root
    group: root
    mode: '0700'
    recurse: true

- name: Set permissions for PiVPN files
  ansible.builtin.file:
    path: /etc/pivpn
    state: directory
    owner: root
    group: root
    mode: '0700'
    recurse: true

# 4. Pull and Run Docker Container
- name: Pull WireGuard PiVPN Docker image
  community.docker.docker_image:
    name: ghcr.io/pivpn/pivpn
    tag: latest
    source: pull

- name: Run WireGuard PiVPN Docker container
  community.docker.docker_container:
    name: pivpn-wireguard
    image: ghcr.io/pivpn/pivpn:latest
    restart_policy: unless-stopped
    network_mode: host
    volumes:
      - /etc/wireguard:/etc/wireguard
      - /etc/pivpn:/etc/pivpn
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    env:
      VPN: wireguard