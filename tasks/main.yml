---
- include_tasks: docker-setup/enable-cgroups.yml

- include_tasks: docker-setup/debian-setup.yml
  when: ansible_os_family == 'Debian'

- name: Install Docker packages.
  package:
    name: "{{ docker_packages }}"
    state: "{{ docker_packages_state }}"
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: "ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['RedHat', 'Debian']"

- name: Install Docker packages (with downgrade option).
  package:
    name: "{{ docker_packages }}"
    state: "{{ docker_packages_state }}"
    allow_downgrade: true
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: "ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']"

- name: Ensure /etc/docker/ directory exists.
  file:
    path: /etc/docker
    state: directory
    mode: 0755
  when: docker_daemon_options.keys() | length > 0

- name: Configure Docker daemon options.
  copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: 0644
  when: docker_daemon_options.keys() | length > 0
  notify: restart docker

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: docker_service_manage | bool

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers

- name: Get docker group info using getent.
  getent:
    database: group
    key: docker
    split: ':'
  when: docker_users | length > 0

- name: Check if there are any users to add to the docker group.
  set_fact:
    at_least_one_user_to_modify: true
  when:
    - docker_users | length > 0
    - item not in ansible_facts.getent_group["docker"][2]
  with_items: "{{ docker_users }}"

- include_tasks: docker-setup/docker-users.yml
  when: at_least_one_user_to_modify is defined

# Comment out containers to use. Kubernetes now handles most of these
# - name: Add docker users
#   ansible.builtin.import_tasks: docker-setup/docker-users.yml

# - name: Add portainer
#   ansible.builtin.import_tasks: containers/portainer/portainer.yml

# - name: Add pi-hole
#   ansible.builtin.import_tasks: containers/pi-hole/pi-hole.yml

# - name: Add magic mirror
#   ansible.builtin.import_tasks: containers/magic-mirror/magic-mirror.yml

# - name: Add llm web backend
#   ansible.builtin.import_tasks: containers/llm-web-backend/llm-web-backend.yml

# - name: Add esphome
#   ansible.builtin.import_tasks: containers/esphome/esphome.yml

# - name: Add nfs
#   ansible.builtin.import_tasks: containers/nfs/nfs.yml

- name: Add traefik
  ansible.builtin.import_tasks: containers/traefik/traefik.yml

- name: Add home-assistant
  ansible.builtin.import_tasks: containers/home-assistant/home-assistant.yml

- name: Add code-space
  ansible.builtin.import_tasks: containers/code-space/code-space.yml

- name: Add pivpn
  ansible.builtin.import_tasks: services/vpn/vpn.yml

- name: Add unbound
  ansible.builtin.import_tasks: services/unbound/unbound.yml

# TODO: This takes down wifi currently
# - name: Add firewall
#   ansible.builtin.import_tasks: security/firewall.yml

- name: Check if a reboot is required.
  stat:
    path: /var/run/reboot-required
    get_checksum: false
  register: reboot_required_file

- name: Reboot the server (if required).
  reboot:
  when: reboot_required_file.stat.exists == true
